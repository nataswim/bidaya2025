<?php

namespace App\Http\Controllers;

use App\Models\Fiche;
use App\Models\FichesCategory;
use Illuminate\Http\Request;

/**
 * ðŸ‡¬ðŸ‡§ PublicFicheController - Public display of fiches
 * ðŸ‡«ðŸ‡· PublicFicheController - Affichage public des fiches
 * 
 * @file app/Http/Controllers/PublicFicheController.php
 */
class PublicFicheController extends Controller
{
    /**
     * ðŸ‡¬ðŸ‡§ Display all categories
     * ðŸ‡«ðŸ‡· Afficher toutes les catÃ©gories
     */
    public function index()
    {
        $categories = FichesCategory::active()
            ->ordered()
            ->withCount(['publishedFiches'])
            ->get();

        $featuredFiches = Fiche::published()
            ->featured()
            ->visibleTo(auth()->user())
            ->with('category')
            ->ordered()
            ->take(6)
            ->get();

        return view('public.fiches.index', compact('categories', 'featuredFiches'));
    }

    /**
     * ðŸ‡¬ðŸ‡§ Display fiches by category
     * ðŸ‡«ðŸ‡· Afficher les fiches par catÃ©gorie
     */
    public function category(FichesCategory $category)
    {
        if (!$category->is_active) {
            abort(404);
        }

        $fiches = Fiche::published()
            ->visibleTo(auth()->user())
            ->where('fiches_category_id', $category->id)
            ->with('category')
            ->ordered()
            ->paginate(12);

        return view('public.fiches.category', compact('category', 'fiches'));
    }

    /**
     * ðŸ‡¬ðŸ‡§ Display a single fiche
     * ðŸ‡«ðŸ‡· Afficher une fiche
     */
    public function show(FichesCategory $category, Fiche $fiche)
    {
        // ðŸ‡¬ðŸ‡§ Verify fiche belongs to category / ðŸ‡«ðŸ‡· VÃ©rifier que la fiche appartient Ã  la catÃ©gorie
        if ($fiche->fiches_category_id !== $category->id) {
            abort(404);
        }

        // ðŸ‡¬ðŸ‡§ Check if user can view / ðŸ‡«ðŸ‡· VÃ©rifier si l'utilisateur peut voir
        if (!$fiche->canViewContent(auth()->user())) {
            if (!auth()->check()) {
                return redirect()->route('login')
                    ->with('info', 'Veuillez vous connecter pour accÃ©der Ã  cette fiche.');
            }
            
            abort(403, 'AccÃ¨s non autorisÃ© Ã  cette fiche.');
        }

        // ðŸ‡¬ðŸ‡§ Increment views / ðŸ‡«ðŸ‡· IncrÃ©menter les vues
        $fiche->incrementViews();

        // ðŸ‡¬ðŸ‡§ Load relationships / ðŸ‡«ðŸ‡· Charger les relations
        $fiche->load(['category', 'creator']);

        // ðŸ‡¬ðŸ‡§ Related fiches / ðŸ‡«ðŸ‡· Fiches associÃ©es
        $relatedFiches = Fiche::published()
            ->visibleTo(auth()->user())
            ->where('fiches_category_id', $category->id)
            ->where('id', '!=', $fiche->id)
            ->with('category')
            ->ordered()
            ->take(3)
            ->get();

        return view('public.fiches.show', compact('fiche', 'category', 'relatedFiches'));
    }
}