@extends('layouts.admin')

@section('title', 'CrÃ©er un utilisateur')
@section('page-title', 'Nouvel utilisateur')
@section('page-description', 'CrÃ©ation d\'un nouveau compte utilisateur')

@section('content')
<div class="container-fluid">
    <form method="POST" action="{{ route('admin.users.store') }}">
        @include('admin.users.partials.form', [
            'submitLabel' => 'CrÃ©er l\'utilisateur',
            'roles' => $roles
        ])
    </form>
</div>
@endsection

@push('styles')
<style>
.bg-gradient-primary {
    background: linear-gradient(135deg, #0ea5e9 0%, #0f172a 100%);
}

.bg-gradient-success {
    background: linear-gradient(135deg, #10b981 0%, #06b6d4 100%);
}

.bg-gradient-warning {
    background: linear-gradient(135deg, #f59e0b 0%, #10b981 100%);
}

.bg-gradient-info {
    background: linear-gradient(135deg, #06b6d4 0%, #0ea5e9 100%);
}

.bg-gradient-secondary {
    background: linear-gradient(135deg, #6b7280 0%, #4b5563 100%);
}
</style>
@endpush

@push('scripts')
<script>
document.addEventListener('DOMContentLoaded', function() {
    // GÃ©nÃ©ration automatique du username Ã partir du nom
    const nameInput = document.getElementById('name');
    const usernameInput = document.getElementById('username');
    
    nameInput.addEventListener('input', function() {
        if (!usernameInput.value || usernameInput.dataset.autoGenerated) {
            const username = this.value
                .toLowerCase()
                .replace(/[^a-z0-9]+/g, '_')
                .replace(/^_+|_+$/g, '')
                .substring(0, 20);
            usernameInput.value = username;
            usernameInput.dataset.autoGenerated = 'true';
        }
    });
    
    usernameInput.addEventListener('input', function() {
        this.dataset.autoGenerated = '';
    });

    // Validation des mots de passe
    const passwordInput = document.getElementById('password');
    const confirmPasswordInput = document.getElementById('password_confirmation');
    
    function validatePasswords() {
        if (passwordInput.value && confirmPasswordInput.value) {
            if (passwordInput.value !== confirmPasswordInput.value) {
                confirmPasswordInput.setCustomValidity('Les mots de passe ne correspondent pas');
            } else {
                confirmPasswordInput.setCustomValidity('');
            }
        }
    }
    
    passwordInput.addEventListener('input', validatePasswords);
    confirmPasswordInput.addEventListener('input', validatePasswords);
});
</script>
@endpush